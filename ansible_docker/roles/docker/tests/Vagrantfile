# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

current_dir    = File.dirname(File.expand_path(__FILE__))
configs        = YAML.load_file("#{current_dir}/vagrant_config.yml")
config_key     = ENV['CONFIG_KEY'] || configs['configs']['use']
vagrant_config = configs['configs'][config_key]

# Plugins:
#   vagrant plugin install vagrant-vbguest
Vagrant.configure("2") do |config|
  config.vm.box = vagrant_config['box']
  config.ssh.insert_key = false
  config.vbguest.auto_update = false
  config.vbguest.no_remote = true
  config.vm.synced_folder "../", "/mnt/ansible-role-docker-ce", :mount_options => ["ro"]
  config.vm.network :forwarded_port, guest: 22, host: 2222, id: "ssh"
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"
    docker_disk = 'extra_disk/docker_disk.vdi'
    unless File.exist?(docker_disk)
      vb.customize ['createhd', '--filename', docker_disk, '--size', 5 * 1024]
    end
    vb.customize ['storageattach', :id, '--storagectl', 'IDE Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', docker_disk]
  end

  # Print config in use
  config.vm.provision "shell",
    inline: "echo '" + config_key + "' > /var/tmp/provisioning-config"

  # Prepare Ansible roles directory
  config.vm.provision "shell",
    inline: "test -d /etc/ansible/roles/haxorof.docker-ce || \
      (mkdir -p /etc/ansible/roles && \
      ln -s /mnt/ansible-role-docker-ce /etc/ansible/roles/haxorof.docker-ce)"

  # Prepare box
  config.vm.provision "ansible_local" do |ansible|
    ansible.verbose        = false
    ansible.playbook       = vagrant_config['prep_yml']
    ansible.limit          = "test-host"
    ansible.inventory_path = "hosts"
    ansible.config_file    = "/vagrant/ansible.cfg"
  end
  # Test storage config
  config.vm.provision "ansible_local" do |ansible|
    ansible.verbose        = false
    ansible.playbook       = vagrant_config['test_yml']
    ansible.limit          = "test-host"
    ansible.inventory_path = "hosts"
    ansible.config_file    = "/vagrant/ansible.cfg"
  end
end
